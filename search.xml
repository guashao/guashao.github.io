<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>试着阐明复杂度（一）</title>
    <url>/2020/03/24/%E8%AF%95%E7%9D%80%E9%98%90%E6%98%8E%E5%A4%8D%E6%9D%82%E5%BA%A6(%E4%B8%80)/</url>
    <content><![CDATA[<p>今天开始正式学习算法，先拿这个之前一看到各种论证推理就晕菜的复杂度下手。这次丢掉繁杂的论证过程，试着不专业的阐明算法的头道菜–复杂度</p>
<a id="more"></a>

<h1 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h1><h2 id="什么是大O"><a href="#什么是大O" class="headerlink" title="什么是大O"></a>什么是大O</h2><p><img data-src="https://gitee.com/kerf/picbed/raw/master/img/20200325011534.png" alt=""></p>
<p>先解决最重要的 <strong>描述复杂度级别</strong> 的 O(f(n)) 问题。什么是大O？</p>
<p>答：简单说就是你运行的程序所 <strong>需要执行的指令数</strong> ()。</p>
<p>举例来说如图：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/guashao/Figurebed/img/20200325015711.png" alt=""></p>
<p>这里的a,b,c,d为常数，具体是多少，麻烦不头疼的去翻翻书。</p>
<p>特定的算法对应特定的值，而真正影响执行时间的，就是 <strong>数据规模n</strong> 的事了。</p>
<p>我们描述一个算法的时间复杂度，往往 <strong>不是说它具体运行多长时间，而是说它是哪个级别</strong> 。（毕竟你不可能根据执行的指令数准确说出它得运行多久，所以大O里面的函数就<strong>没a,b,c,d这些常数什么事</strong>了。）</p>
<h2 id="试着来描述数据规模"><a href="#试着来描述数据规模" class="headerlink" title="试着来描述数据规模"></a>试着来描述数据规模</h2><p>说完大O，来说说大O里面的n</p>
<p>n是我们<strong>算法处理的数据量</strong>的描述。比如一个算法里我们遍历了一个大小为n的数组，那么它的数据规模就是<strong>n</strong>,时间复杂度级别为<strong>O(n)</strong>。</p>
<p>那我可以知道它大概运行了多长时间吗？</p>
<p><img data-src="https://gitee.com/kerf/picbed/raw/master/img/20200325011537.png" alt=""></p>
<p>如图：如果你的数据规模为n，时间复杂度级别为<strong>O(n)</strong>，那么当<strong>n为$ 10^8$</strong>时，计算机需要运行1秒。</p>
<p>时间复杂度级别为O($ n^2$),那么当<strong>n为$ 10^4$</strong>时，计算机需要运行1秒。</p>
<p>也就是说<strong>数据规模n</strong>，<strong>时间复杂度O(f(n))</strong>，<strong>时间</strong>三者是可以联系起来描述的</p>
<p>。我们可以记住<strong>1秒内，复杂度为O(n)的算法可以处理$ 10^8$级别的数据</strong>。这有利于我们对算法的执行时间进行判断。</p>
<h2 id="为什么是O-logn-不是O-log-2-n-或者O-log-10-n"><a href="#为什么是O-logn-不是O-log-2-n-或者O-log-10-n" class="headerlink" title="为什么是O(logn)不是O($ log_2$n)或者O($ log_{10}$n)"></a>为什么是O(logn)不是O($ log_2$n)或者O($ log_{10}$n)</h2><p>我们先来看<strong>典型的O(logn)</strong>的算法例子：二分查找</p>
<p><img data-src="https://raw.githubusercontent.com/guashao/Figurebed/master/img/20200325014737.png" alt=""></p>
<p>可以看到二分查找实际上是判断<strong>n经过几次“除以2”等于1</strong>？我们模拟查找过程：<br>$$<br>第0次查找范围：n/2^0=n<br>$$</p>
<p>$$<br>第1次查找范围：n/2^1=n/2<br>$$</p>
<p>$$<br>第2次查找范围：n/2^2=n/4<br>$$</p>
<p>$$<br>最后一次查找范围：n/2^x= 1<br>$$</p>
<p>可得x=$ log_2$n。好，到这步我们来看另外一个例子</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sum=sum+test(n/<span class="number">5</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这一个<strong>递归函数</strong>的复杂度级别是多少呢？</p>
<p>我们不难发现这个例子与上个例子是<strong>异曲同工</strong>的。判断它的<strong>递归次数实际是判断n经过几次“除以5”小于等于1</strong>。结果是=$ log_5$n.</p>
<p>这两个例子我们都用O(logn)表示，也就是说<strong>忽略了底数的差别</strong>。</p>
<p>为什么可以这样呢？我们先看图</p>
<p><img data-src="https://gitee.com/kerf/picbed/raw/master/img/20200325011538.png" alt=""></p>
<p>由图中式子知道，<strong>底数不同的两个log函数差了一个常数倍数</strong>。</p>
<p>我们在前面说，大O里面我们考虑的是不同数据规模对于执行时间的影响，换句话说就是<strong>真正影响执行时间的主要考虑数据规模n</strong>,由此对于一个常数，我们是可以不考虑的。</p>
<p>所以，忽略了底数的不同，我们就可以写为O(logn)</p>
<blockquote>
<p>关于复杂度的进一步分析，我会在篇章二来进行</p>
</blockquote>
]]></content>
      <categories>
        <category>技术笔记</category>
      </categories>
      <tags>
        <tag>java，算法入门，复杂度</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/03/18/1111/</url>
    <content><![CDATA[<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><p>内容</p>
<h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>内容</p>
<h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><img data-src="https://raw.githubusercontent.com/guashao/Figurebed/master/img/wali.jpg" alt="头像" style="zoom:33%;" />

<p>这是我第一篇博客</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/guashao/Figurebed/img/20200325020728.png" alt=""></p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/03/16/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<a id="more"></a>

<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
</search>
